Список вопросов к видео https://www.youtube.com/watch?v=Si9MfV8uJ-0 (НАСТРОЙКА VSCODE, перенос строк, линтеры, работа с ячейками):

(ОПЦИОНАЛЬНО)В ответе подробно всё опишите и обязательно нужно указывать тайм код из видео где я это сказал, по желанию, дополнительно прикладываем скриншот из видео.
Если вы знаете ответы на вопросы из Вашего опыта, то таймкоды из видео не надо указывать и т.д.

1. Как включить автосохранение данных в VSCODE?
2. Как настроить перенос строки? 
3. Сколько символов по pep8 разрешено на строке?
4. Какие способы переноса строк показаны в видео:

4.1 Строки с использованием обратного слэша (\)

string_continued = "This is a long string that we want to " \
                   "split across multiple lines."
print(string_continued)

4.2 Тройные кавычки (''' или """) 

multi_line_string = """This is a string that spans
multiple lines. You can write freely
and it will keep the line breaks."""
print(multi_line_string)

4.3 Создание списка строк и объединение с помощью join

strings = [
    "This is the first line.",
    "This is the second line.",
    "This is the third line."
]
result = "\n".join(strings)  # Используем перенос строк '\n'
print(result)

4.4 Использование круглых скобок для продолжения строки
long_string = (
    "This is a very long string that I would like to "
    "continue on the next line."
)
print(long_string)

4.5 Форматированные строки (f-строки) с использованием скобок
letter_a = 5
letter_b = 6
product_ab = letter_a * letter_b

message = (
    f"when {letter_a} is multiplied by {letter_b}, "
    f"the result is {product_ab}"
)
print(message)

4.6 Сложение строк с помощью +

string_part1 = "This is the first part, "
string_part2 = "and this is the second part."
full_string = string_part1 + string_part2
print(full_string)

5. Проверка на ошибки c помощью кнопки problems, где она находится?
6. Где в vscode находится клиент гита? как в нём отправить коммит? как принять домашку?
7. Что такое GIT? он локальный? В нём можно посмотреть историю изменений файлов и вернуться к любому коммиту?
8. Как вставить картинку в маркдаун? 
9. Где посмотреть длину строки в vs code?
10. Как поменять тип ячейки с питона на маркдаун?
11. Как запустить сразу все ячейки в юпитере?
12. Как изменить размер картинки в юпитере? Нужно для этого знать HTML?
13. Какой хоткей чтобы запустить ячейку с смещением на следующую?
14. Как включить отображение номеров строк в юпитере(Cell line numbers)?
15. Что такое "Go To" чем это полезно? Как перейти сразу на ошибочную ячейку?
16. Как очистить вывод ячеек которые уже запущены?
17. Как работать одновременно в нескольких файлах в VSCODE? Что такое SPLIT?
18. Каким сочетанием убирается левый сайдбар?
19. Кнопка два листочка это наши локальные файлы?
20. Какая ошибка появилась в трассировке при запуске всех ячеек DICT или LIST?
21. Вы ознакомились с https://t.me/c/1937296927/832/19307? и ttps://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet?
22. Что такое валидация?
23. Что такое трассировка ошибки?
24. Что значит отвалился интерпритатор?

Ответы:
1) File -> ставим галочку Auto Save
2) File -> Preferences -> Settings -> в поисковой строке вводим wrap -> выбираем worldWrapColumn? ставим 79 символов
3) 79 символов
4) 4.4, 4.6
5) Внизу слева "Problems"
6) Чтобы открыть клиент Git, нажмите на значок с тремя ответвлениями или иконку Git в левом нижнем углу VS Code. В панели Source Control (источник контроля) появится список изменённых файлов. Введите сообщение для коммита в поле вверху. Нажмите на галочку (✓) или используйте сочетание клавиш Ctrl + Enter. Нажмите на кнопку "..." в верхнем правом углу панели Source Control и выберите Push (или используйте команду git push в терминале). В клиенте Git нажмите на ..." (три точки) в правом верхнем углу.
Выберите Pull для получения последних изменений с удалённого репозитория.
7) Git — это система управления версиями, которая отслеживает изменения в коде и позволяет работать с различными версиями проектов.
Git может быть локальным (то есть работает в вашей локальной системе), а также удалённым (когда данные синхронизируются с серверами, такими как GitHub, GitLab и т. д.).
Да, с помощью Git можно просматривать историю изменений файлов и возвращаться к любому коммиту с помощью команд:
    git log — просмотр истории коммитов.
    git checkout <коммит> — возврат к конкретному коммиту.
8) [Описание изображения](путь/к/картинке.png), ctrl + V
9) В строке состояния внизу будет отображаться длина текущей строки (считается от начала строки до её конца).
10) В верхнем меню выберите Cell → Cell Type → выберите Markdown/Python.
Shift + M, Ctrl + P 
11) Run → Run All Cells
12) Да 
13) Shift + Enter
14) ctrl + L, "..." на ячейке, выбрать нумерацию строк
15) Go To — это функциональность, которая позволяет быстро перемещаться в коде или тексте. В VSCode она позволяет перейти к определённой строке, функции, классу или файлу. Ctrl + Shift + P -> Go To -> выбираем ошибку    
16) В меню Cell выберите All Output → Clear
17) Перетащите файл в боковую панель или используйте *Ctrl + *, чтобы разделить экран и открыть два файла одновременно.
Split позволяет разделить рабочую область на несколько панелей для удобной работы с несколькими файлами одновременно.
18) Ctrl + B
19) Да, кнопка с двумя листочками в VSCode открывает панель Explorer, где отображаются все ваши локальные файлы и папки в проекте.
20) Если ошибка в трассировке указывает на DICT или LIST, это может означать, что в коде используется некорректная структура данных (dict или list).
21) Да
22) Валидация — это процесс проверки правильности данных или работы программы в соответствии с определёнными требованиями или правилами. Валидация может включать проверку на корректность ввода данных, проверку выполнения кода или проверку соответствия API.
23) Трассировка ошибки — это процесс анализа и понимания причин, по которым программа не работает должным образом.
24) Отвалился интерпритатор — это когда он не может выполнить команду, например, не может найти файл или не может выполнить код.
