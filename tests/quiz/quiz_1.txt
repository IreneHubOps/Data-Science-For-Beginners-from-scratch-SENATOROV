Список вопросов к видео https://youtu.be/hW_7hodGxVU?si=tCEVs00xGt2q61eW (АЛГОРИТМ ПРИНЯТИЯ И ОТДАЧИ ДОМАШКИ):

(ОПЦИОНАЛЬНО)В ответе подробно всё опишите и обязательно нужно указывать тайм код из видео где я это сказал, по желанию, дополнительно прикладываем скриншот из видео.
Если вы знаете ответы на вопросы из Вашего опыта, то таймкоды из видео не надо указывать и т.д.

1) Как понять, что домашка пришла?
Зайти в чат HomeWork, Ник и приму пул (0:13)
2) Как принять домашку?
Заходим в кошечку (github desktop) клацаем на fetch rigin (0:22)
3) Зачем нужна кнопка history и какие функции появляются при нажатии правой кнопки мыши на коммит?
Видим все коммиты , есть возможность посмотреть изменения (0:32)
3.1) Где брать ссылку на коммит? куда её отправлять? 
После создания коммита, нажимае правой кнопкой мыши на view on github и в открывшемся окне копируем ссылку (4:23)
4) Что такое файл лога? 
Файл, который заполняется в конце каждого урока  и отражает все изменения которые были внесены в этом уроке (1:43)
4.1) Когда нужно его пушить?
после того как заполнили файл лога 
5) Что такое интерпритатор? 
интерпритатор это программа, которая читает и запускает наш код (3:19)
6) Где можно выбрать интерпритатор?
можно выбрать вверху, в окошке, либо справа в углу (3:35)
7) Что такое модуль? 
Модуль - обычно файл с расширением py или ipynb (9:46)
8) Как создать и отправить коммит?
Зайти в кошечку, в changes слева внизу написать то, что мы сделали и нажать commit to main - Push origin (4:03)
9) Как посмотреть что коммит точно отправлен и находится в github?
Зайти в кошечку, в history справа видно, что он отправился (4:15)
10) Какая команда показывает что код не прошёл проверки на ошибки? 
pre-commit run --all-files (6:24)
10.1) Напишите список линтеров которые используются для проверки кода и дайте их краткую характеристику.
  pylint - проверяет ошибки в коде и соответствие стилю PEP8
  pydocstyle - проверяет соответствие стандартам документации
  flake8 - проверяет стилистические ошибки
  mypy - проверяет соответствие типов данных (7:13)
11) Как узнать какой именно линтер не прошёл проверку?
при запуске команды pre-commit run --all-files видно какой именно линтер не прошёл проверку (7:25)
12) Линтер Pylint видит markdown?
линтер не видит markdown (7:57)
13) Номер ячейки в терминале и номер ячейки в vs code может отличаться? в каком случае?
может отличаться, т.к. не видит markdown (7:55)
14) Где посмотреть номер ячейки в vscode?
внизу справа есть cell (8:09)
15) В каком формате ipynb отправляется в гитхаб? причём здесь JSON?
ipynb отправляется в гитхаб в формате JSON, но это не важно (3:53)
16) Где посмотреть в какой ячейке ошибка?
после запуска команды pre-commit run --all-files если ошибка, то видно после названия файла (10:51)
17) Как запустить терминал?
сверху есть кнопка terminal - new terminal 
18) Что такое линтер?
Программа, которая проверяет файл на корректность (6:54)
19) В какой сайт нужно вставлять код ошибки если ошибка связана с pylint?
https://pylint.pycqa.org (09:00)
20) Секция pydocstyle в большинстве случае автоматический закрывается после исправления ошибок в каком линтере?
по pylint (11:20)
21) Что такое описание модуля? Оно должно отражать информацию о том что находится в модуле?
Многострочный комментарий(python), который должен отражать информацию о модуле (12:45)
22) С какой  git команды начинается утро программиста?
git pull 
23) После внесения изменений в файлах, кнопка open in vs code пропадает в кошке, как по другому открыть vs code из кошки?
нажимаем правой кнопкой мыши на current repository и выбираем open in vs code (15:28)
23) Что такое stash?  
  Общее объяснение концепции.
  Временное изменение в буфере обмена (16:42)
23.1) Как сохранить стэш?
  git командa(подсказка: https://t.me/c/1937296927/3602/19531): 
  git stash save
  Кнопка в vs code:
  stash changes (16:30)

23.2) Как восстановить стэш(подсказка: https://t.me/c/1937296927/3602/25747)?:
stashed changes - restore (17:03)

      git команда(подсказка: https://t.me/c/1937296927/3602/19531)?:


23.3) Различие между стэшем и коммитом.  
  Когда лучше сохранить изменения в стэше, а когда коммитить.
23.4) Как просмотреть список сохраненных стэшей?  
  git команда (подсказка: https://t.me/c/1937296927/3602/19531):
  git stash apply

23.5) Как удалить стэш?  
  Команды для удаления отдельных стэшей или всех сразу.
  git команда (подсказка: https://t.me/c/1937296927/3602/19531):
  git stash drop

23.6) Практические примеры использования стэша.  
  Краткие сценарии, где стэш помогает.
  Когда внесены изменения двумя разными пользователями (17:35)
24) Где посмотреть что есть конфликт в файлах? 
в кошечке в changes восклицательный знак (17:35)
24.1) Когда он появляется?
когда внесены изменения двумя разными пользователями (17:20)
25) Как решить конфликт в файлах?
ПКМ на восклицательный знак и открыть в vs code - accept current changes либо вручную(18:40)
26) Напишиие правильное утверждение
-Зелёное то что пришло с гитхаба и синее локальные изменения (18:18)
27) Если мы работаем в одном файле, можно ли принять pull после того как вы спрячете в стэш свои изменения? 
Можно (16:50)
27.1) Что может произойти когда stash восстановите после принятия pull?
конфликт, т.к. не понимает что изменилось (17:25)
28) Сколько способов решения конфликтов было показано в видео? Напишите ЧИСЛО и укажите их способы.
Accept Current Change (изменения на локальном компе), Incoming Change (изменения с гитхаба), Both Changes (чтобы ничего не потерять), вручную 
внести изменения в файл (17:59)
29) Что делает кнопка complete merge?
завершает процесс слияния (18:50)
30) В какой чат нужно писать если остались вопросы?
в help me (19:41)
31) Что такое FORK? Зачем его делают? 
Копирование репозитория и сделать его личным (20:32) Делать с ним, что захотим
32) Как скачать форкнутый репозиторий на локальный компьютер?
в кошече add-clone repository - выбираем репозиторий (21:02)

33) С какой вероятностью ваши ошибки были уже решены? и кто их решил?
с вероятностью 90% их решили другие студенты 
34) Как создать файл в vs code?
нажать листочек с плюсиком (1:21)
35) Файл лога нужно заполнять в конце каждого урока?
Да (1:40)

==================

Дополнительные вопросы:
1)Какая команда конвертирует файл в py из ipynb? 
подсказка https://t.me/c/1937296927/1/26527 
2) Что такое пакетный менеджер? Вы пользуетесь пакетным менеджером conda или pip? Какой лучше использовать для дата сайнс?
3) Почему расширение py лучше чем ipynb?
4) Что такое pep8? 
подсказка:https://peps.python.org/pep-0008/
4.1) линтеры проверяют на соблюдение pep8?
4.2) Какая нотация используется для создания переменных? 
ответ на 85-95 страницы https://t.me/c/1937296927/1/16676
4.3) Может ли переменная состоять из одной буквы например андерскор  "_" ?
4.4) Зачем и где мы используем андерскор _ 
4.5) По PEP8 допустима переменная в одну букву?
ответ на 85-95 страницы https://t.me/c/1937296927/1/16676
