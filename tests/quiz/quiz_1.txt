Список вопросов к видео https://t.me/c/1937296927/765/29780 (АЛГОРИТМ ПРИНЯТИЯ И ОТДАЧИ ДОМАШКИ):
    
(По желанию )В ответе подробно всё опишите и обязательно нужно указывать тайм код из видео где я это сказал, по желанию, дополнительно прикладываем скриншот из видео.
Если вы знаете ответы на вопросы из Вашего опыта, то таймкоды из видео не надо указывать и т.д.

1) Как понять, что домашка пришла?
  Домашка приходит сюда - https://github.com/SENATOROVAI/docs/milestones либо приходит в тг чат "Homework"

2) Как принять домашку?
  Ввести команды git fetch и git pull

3) Зачем нужна кнопка history и какие функции появляются при нажатии правой кнопки мыши на коммит?
   Нужна для отображения истории коммитов, при нажатии появляются функции для работы с коммитами (ПКМ)

3.1) Где брать ссылку на коммит? куда её отправлять? 
  При вводе git commit -m "ваш коммент" отображается ссылка на коммит

4) Что такое файл лога?
  Файл лога - файл , который нужен для описания пройденных тем на уроках

4.1) Когда нужно его пушить?
  Нужно пушить в течение 10 минут после конца уроках

5) Что такое интерпритатор?
  Интерпритатор - это программа, которая читает и выполняет наш код

6) Где можно выбрать интерпритатор?
  При запуске кода в верхней строке поиске дается выбор интерпритатора

7) Что такое модуль?
  Модуль - это python файл

8) Как создать и отправить коммит?
  - нажать "+" на нужный файл, чтобы внести изменения в трекинг систему гит
   - прописать в поле "Message" тайтл и дескрпишн , затем выбрать и нажать commit & sync

9) Как посмотреть что коммит точно отправлен и находится в github?
  Если коммит был отправлен , то он должен отобразиться по ссылке -  https://github.com/SENATOROVAI/Data-Science-For-Beginners-from-scratch-SENATOROV/commits/ИМЯ_ВЕТКИ

10) Какая команда показывает что код не прошёл проверки на ошибки?
  pre-commit run --all-files

10.1) Напишите список линтеров которые используются для проверки кода и дайте их краткую характеристику.
  - jupytext управляет Jupyter Notebook в разных форматах;
  - docformatter автоформатирует docstring;
  - black автоматически форматирует код в соответствии со стилем PEP 8;
  - nbqa-black применяет Black к Jupyter Notebook;
  - pyupgrade обновляет синтаксиса Python;
  - isort сортирует импорты;
  - nbqa-blacken-docs примененяет Black к документации в Jupyter Notebook;
  - nbqa-pyupgrade обновляет синтаксис в Jupyter Notebook;
  - nbqa-isort сортирует импорты в Jupyter Notebook;
  - codespell ищет орфографические ошибки;
  - nbqa-flake8 делает статический анализ Jupyter Notebook с Flake8;
  - flake8 делает статический анализ Python-кода;
  - nbqa-mypy делает статическую типизацию в Jupyter Notebook;
  - mypy проверяют типы в Python;
  - nbqa-pylint делает статический анализ Jupyter Notebook с Pylint;
  - pylint делает глубокий анализ кода и стиля;
  - nbqa-pydocstyle проверяет docstring в Jupyter Notebook.

11) Как узнать какой именно линтер не прошёл проверку?
  После команды 'pre-commit run --all-files' появляется информация о том, какой линтер не прошёл проверку.

12) Линтер Pylint видит markdown?
  Нет.

13) Номер ячейки в терминале и номер ячейки в vs code может отличаться? в каком случае?
  Да. В случае, если в jupyter notebook ячейки python и markdown идут друг за другом.

14) Где посмотреть номер ячейки в vscode?
  В правом нижнем углу - Cell 'n' of 'n'.

15) В каком формате ipynb отправляется в гитхаб? причём здесь JSON?
  Файлы ipynb отправляются в формате JSON . JSON - стандартный текстовый формат для хранения структурированных данных и обмена ими.

16) Где посмотреть в какой ячейке ошибка?
  При коммите , если код содержал ошибки , то выйдет окно с ошибками линтера, там же информация о том, в какой ячейке ошибка.

17) Как запустить терминал?
  <ctrl> + j открывает терминал в vs code.

18) Что такое линтер?
  Программа для проверки кода на ошибки.

19) В какой сайт нужно вставлять код ошибки если ошибка связана с pylint?
  https://pylint.pycqa.org

20) Секция pydocstyle в большинстве случае автоматический закрывается после исправления ошибок в каком линтере?
  pylint

21) Что такое описание модуля? Оно должно отражать информацию о том что находится в модуле?
  В начале модуля обязательно должно быть его описание, которое содержит информацию о его содержимом. Оно заключается в тройные кавычки (""" описание """).

21) С какой  git команды начинается утро программиста?
  git pull

22) После внесения изменений в файлах, кнопка open in vs code пропадает в кошке, как по другому открыть vs code из кошки?
  При нажатии в кошке правой кнопки мыши по названию своего репозитория в левом верхнем углу появится список в которым есть кнопка open in vs code.

23) Что такое stash?  
  Общее объяснение концепции.
   Это - временное сохранение изменений в файлах.
  
23.1) Как сохранить стэш?
  git командa(подсказка: https://t.me/c/1937296927/3602/19531): 
    git stash save "Имя_стэша"

  Кнопка в vs code:
    Stash changes and continue

23.2) Как восстановить стэш(подсказка: https://t.me/c/1937296927/3602/25747)?:

      git команда(подсказка: https://t.me/c/1937296927/3602/19531)?:
        git stash apply "NUMBER_STASH"

23.3) Различие между стэшем и коммитом.  
  Когда лучше сохранить изменения в стэше, а когда коммитить.

    Stash временно сохраняет локальные изменения в буфере, недоступном для других, в то время как Commit сохраняет изменения в истории репозитория и виден всем.

23.4) Как просмотреть список сохраненных стэшей?  
  git команда (подсказка: https://t.me/c/1937296927/3602/19531):

    git stash list


23.5) Как удалить стэш?  
  Команды для удаления отдельных стэшей или всех сразу.
  git команда (подсказка: https://t.me/c/1937296927/3602/19531):

    git stash clear / git stash drop stash@{n}

23.6) Практические примеры использования стэша.  
  Краткие сценарии, где стэш помогает.

  Вы работаете над новой функцией, но вам срочно нужно переключиться на другую ветку, чтобы исправить критический баг. Ваши текущие изменения ещё не готовы для коммита.

24) Где посмотреть что есть конфликт в файлах? 
  В терминале при попытке коммита появится сообщение о конфликте.

24.1) Когда он появляется?
  Когда в одном файле есть изменения, которые сделали два и более человек.

25) Как решить конфликт в файлах?
  Открыть файл и выбрать какие изменения оставить.

26) Напишиие правильное утверждение
-Зелёное то что пришло с гитхаба и синее локальные изменения или синее то что пришло с гитхаба и зелёное это локальные изменения 

  Зелёное - то что пришло с гитхаба и синее - локальные изменения.

27) Если мы работаем в одном файле, можно ли принять pull после того как вы спрячете в стэш свои изменения?
  Можно.

27.1) Что может произойти когда stash восстановите после принятия pull?
  Возможно появятся конфликты.

28) Сколько способов решения конфликтов было показано в видео? Напишите ЧИСЛО и укажите их способы.
  2 способа:
    - Кнопками Accept
    - Вручную удаляем ненужные строки

29) Что делает кнопка complete merge?
  Завершает процесс слияния двух веток после устранения конфликтов.

30) В какой чат нужно писать если остались вопросы?
  чат "Help Me".

31) Что такое FORK? Зачем его делают?
  Это копия репозитория, которую можно изменять без влияния на оригинал.

32) Как скачать форкнутый репозиторий на локальный компьютер?
  Склонировать репозиторий.

33) С какой вероятностью ваши ошибки были уже решены? и кто их решил?
  Вероятностью 90% того , что они были решены в чате "Help Me".

34) Как создать файл в vs code?
  File -> New File -> ввести название файла и его расширение

35) Файл лога нужно заполнять в конце каждого урока?
  Да
==================

Дополнительные вопросы:
1)Какая команда конвертирует файл в py из ipynb? 
подсказка https://t.me/c/1937296927/1/26527

  jupyter nbconvert --to script your_notebook.ipynb

2) Что такое пакетный менеджер? Вы пользуетесь пакетным менеджером conda или pip? Какой лучше использовать для дата сайнс?
  - Пакетный менеджер - это программа для управлени зависимостями в проекте.
  - Я использую pip.
  - Для дата сайнс лучше юзать conda.

3) Почему расширение py лучше чем ipynb?
  - py файлы легче читать и редактировать/py файлы занимают меньше места/py файлы можно использовать в других проектах

4) Что такое pep8? 
подсказка:https://peps.python.org/pep-0008/
  это официальный стандарт написания кода на Python

4.1) линтеры проверяют на соблюдение pep8?
  Да

4.2) Какая нотация используется для создания переменных? 
ответ на 85-95 страницы https://t.me/c/1937296927/1/16676
  snake_case

4.3) Может ли переменная состоять из одной буквы например андерскор  "_" ?
  Да

4.4) Зачем и где мы используем андерскор _ 
  В цикле for допускается в качестве имени переменной, которая не используется в коде / в ООП в качестве приватных переменных.

4.5) По PEP8 допустима переменная в одну букву?
ответ на 85-95 страницы https://t.me/c/1937296927/1/16676
  Да
