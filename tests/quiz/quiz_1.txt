Список вопросов к видео https://t.me/c/1937296927/765/29780 (АЛГОРИТМ ПРИНЯТИЯ И ОТДАЧИ ДОМАШКИ):
    
(По желанию )В ответе подробно всё опишите и обязательно нужно указывать тайм код из видео где я это сказал, по желанию, дополнительно прикладываем скриншот из видео.
Если вы знаете ответы на вопросы из Вашего опыта, то таймкоды из видео не надо указывать и т.д.

1) Как понять, что домашка пришла?
Ответ: В телеграмме в чате Homework появляется сообщение
2) Как принять домашку?
Ответ: Нужно сделать git fetch и git pull
3) Зачем нужна кнопка history и какие функции появляются при нажатии правой кнопки мыши на коммит?
Ответ: Что это история коммитов, и появляются функции для работы с коммитами, например можно открыть конкретный коммит на гитхабе
3.1) Где брать ссылку на коммит? куда её отправлять? 
Ответ: Когда ввожу git commit -m "комментарий" появляется ссылка на коммит
4) Что такое файл лога? 
Ответ: Файл лога - это файл, в котором хранятся краткое описание уроков
4.1) Когда нужно его пушить?
Ответ: В конце урока, желательно в течении 10 минут после урока
5) Что такое интерпритатор?
Ответ: Это программа, которая выполняет код
6) Где можно выбрать интерпритатор?
Ответ: В vs code можно выбрать интерпритатор в настройках
7) Что такое модуль? 
Ответ: Модуль - это файл, который содержит код на python
8) Как создать и отправить коммит?
Ответ: Нужно сделать git commit -m "комментарий"
9) Как посмотреть что коммит точно отправлен и находится в github?
Ответ: Также можно открыть клиент Git, кликнуть правой кнопкой мыши на коммит и выбрать View on GitHub, чтобы перейти на страницу коммита и убедиться, что все изменения были добавлены.
10) Какая команда показывает что код не прошёл проверки на ошибки? 
Ответ: pre-commit run --all-files
10.1) Напишите список линтеров которые используются для проверки кода и дайте их краткую характеристику.
Ответ:
- jupytext – управление Jupyter Notebook в разных форматах.
- docformatter – автоформатирование docstring.
- black – автоформатирование кода по PEP 8.
- nbqa-black – применение Black к Jupyter Notebook.
- pyupgrade – обновление синтаксиса Python.
- isort – сортировка импортов.
- nbqa-blacken-docs – применение Black к документации в Jupyter Notebook.
- nbqa-pyupgrade – обновление синтаксиса в Jupyter Notebook.
- nbqa-isort – сортировка импортов в Jupyter Notebook.
- codespell – поиск орфографических ошибок.
- nbqa-flake8 – статический анализ Jupyter Notebook с Flake8.
- flake8 – статический анализ Python-кода.
- nbqa-mypy – статическая типизация в Jupyter Notebook.
- mypy – проверка типов в Python.
- nbqa-pylint – статический анализ Jupyter Notebook с Pylint.
- pylint – глубокий анализ кода и стиля.
- nbqa-pydocstyle – проверка docstring в Jupyter Notebook.
11) Как узнать какой именно линтер не прошёл проверку?
Ответ: При выполнении команды pre-commit run --all-files появляется информация о том, какой именно линтер не прошёл проверку.
12) Линтер Pylint видит markdown?
Ответ: Нет, Pylint видит только Python-код.
13) Номер ячейки в терминале и номер ячейки в vs code может отличаться? в каком случае?
Ответ: Да, номера ячеек могут отличаться если в jupyter notebook ячейки python и markdown идут друг за другом.
14) Где посмотреть номер ячейки в vscode?
Ответ: В правом нижнем углу будет отображаться Cell 4 of 4
15) В каком формате ipynb отправляется в гитхаб? причём здесь JSON?
Ответ: ipynb файл это JSON файл, в таком формате отправляется в гитхаб
16) Где посмотреть в какой ячейке ошибка?
Ответ: При попытке коммита, если код содержит ошибки, то выйдет окно с ошибками линтера. В нем можно посмотреть в каком файле и в какой ячейке ошибка.
17) Как запустить терминал?
Ответ: <ctrl> + j открывает терминал в vs code или в панели меню нажмаем на три точки и выбираем Terminal
18) Что такое линтер?
Ответ: Линтер - это программа, которая проверяет код на ошибки.
19) В какой сайт нужно вставлять код ошибки если ошибка связана с pylint?
Ответ: https://pylint.pycqa.org
20) Секция pydocstyle в большинстве случае автоматический закрывается после исправления ошибок в каком линтере?
Ответ: pylint
21) Что такое описание модуля? Оно должно отражать информацию о том что находится в модуле?
Ответ: В начале модуля располагается его описание, которое содержит информацию о его содержимом. Оно заключается в тройные кавычки (""" описание """).
21) С какой  git команды начинается утро программиста?
Ответ: git pull
22) После внесения изменений в файлах, кнопка open in vs code пропадает в кошке, как по другому открыть vs code из кошки?
Ответ: Можно нажать на кнопку Current Repository. И выбрать Open in Visual Studio Code.
23) Что такое stash?  
  Общее объяснение концепции.
Ответ: Стэш - это временное сохранение изменений в файлах.
23.1) Как сохранить стэш?
  git командa(подсказка: https://t.me/c/1937296927/3602/19531): 
  git stash save "NAME_STASH"

  Кнопка в vs code:
  Stash changes and continue


23.2) Как восстановить стэш(подсказка: https://t.me/c/1937296927/3602/25747)?:

      git команда(подсказка: https://t.me/c/1937296927/3602/19531)?:
      git stash apply "NUMBER_STASH"

23.3) Различие между стэшем и коммитом.  
  Когда лучше сохранить изменения в стэше, а когда коммитить.
Ответ:
- Commit фиксирует изменения в истории репозитория и виден всем.
- Stash временно сохраняет локальные изменения в буфере, недоступном для других.
23.4) Как просмотреть список сохраненных стэшей?  
  git команда (подсказка: https://t.me/c/1937296927/3602/19531):
  git stash list

23.5) Как удалить стэш?  
  Команды для удаления отдельных стэшей или всех сразу.
  git команда (подсказка: https://t.me/c/1937296927/3602/19531):
- git stash clear - удаляет все стэши
- git stash drop stash@{n} - удаляет конкретный стэш по его номеру

23.6) Практические примеры использования стэша.  
  Краткие сценарии, где стэш помогает.
- Переключение ветки без коммита
- Решение конфликтов перед pull
- Работа с чужим кодом

24) Где посмотреть что есть конфликт в файлах? 
Ответ: В терминале при попытке коммита появится сообщение о конфликте.
24.1) Когда он появляется?
Ответ: Когда в одном файле есть изменения, которые сделали два человека.
25) Как решить конфликт в файлах?
Ответ: Нужно открыть файл и выбрать какие изменения оставить.
26) Напишиие правильное утверждение
-Зелёное то что пришло с гитхаба и синее локальные изменения или синее то что пришло с гитхаба и зелёное это локальные изменения 
Ответ: Зелёное то что пришло с гитхаба и синее локальные изменения
27) Если мы работаем в одном файле, можно ли принять pull после того как вы спрячете в стэш свои изменения? 
Ответ: Да, можно.

27.1) Что может произойти когда stash восстановите после принятия pull?
Ответ: Могут появиться конфликты.
28) Сколько способов решения конфликтов было показано в видео? Напишите ЧИСЛО и укажите их способы.
Ответ: 2 способа:
- Кнопками Accept
- Вручную удаляем ненужные строки
29) Что делает кнопка complete merge?
Ответ: Завершает процесс слияния двух веток после устранения конфликтов.
30) В какой чат нужно писать если остались вопросы?
Ответ: В чат Help Me.
31) Что такое FORK? Зачем его делают? 
Ответ: FORK - это копия репозитория, которую можно изменять без влияния на оригинал.
32) Как скачать форкнутый репозиторий на локальный компьютер?
Ответ: Склонировать репозиторий.
33) С какой вероятностью ваши ошибки были уже решены? и кто их решил?
Ответ: С вероятностью 90% они были решены в чате Help Me.
34) Как создать файл в vs code?
Ответ: Нужно нажать на кнопку New File и ввести имя файла.
35) Файл лога нужно заполнять в конце каждого урока?
Ответ: Да, нужно.
==================

Дополнительные вопросы:
1)Какая команда конвертирует файл в py из ipynb? 
подсказка https://t.me/c/1937296927/1/26527 
Ответ: jupyter nbconvert --to script your_notebook.ipynb
2) Что такое пакетный менеджер? Вы пользуетесь пакетным менеджером conda или pip? Какой лучше использовать для дата сайнс?
Ответ:
- Пакетный менеджер - это программа, которая помогает управлять зависимостями в проекте.
- Я использую conda.
- Лучше использовать conda для дата сайнс.
3) Почему расширение py лучше чем ipynb?
Ответ:
- py файлы легче читать и редактировать.
- py файлы занимают меньше места.
- py файлы можно использовать в других проектах.
4) Что такое pep8? 
подсказка:https://peps.python.org/pep-0008/
Ответ: PEP8 - это стандарт написания кода на Python.
4.1) линтеры проверяют на соблюдение pep8?
Ответ: Да, линтеры проверяют на соблюдение pep8.
4.2) Какая нотация используется для создания переменных? 
ответ на 85-95 страницы https://t.me/c/1937296927/1/16676
Ответ: snake_case
4.3) Может ли переменная состоять из одной буквы например андерскор  "_" ?
Ответ: Да, может. Например, в цикле for допускается использование переменной i, j и k, а также "_" в качестве имени переменной, которая не используется в коде.
4.4) Зачем и где мы используем андерскор _ 
Ответ: Вот случаи когда используется:
- В цикле for допускается использование переменной "_" в качестве имени переменной, которая не используется в коде.
- В имени переменной, которая не используется в коде.
- Для обозначения приватных переменных и приватных методов в классе.
4.5) По PEP8 допустима переменная в одну букву?
ответ на 85-95 страницы https://t.me/c/1937296927/1/16676
Ответ:
Да, допустима. Например, в цикле for допускается использование переменной i, j и k, а также "_" в качестве имени переменной, которая не используется в коде.
А еще можно использовать x и y для обозначения координат.

