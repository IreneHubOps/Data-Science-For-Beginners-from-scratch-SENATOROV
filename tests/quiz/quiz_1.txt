Список вопросов к видео https://t.me/c/1937296927/765/29780 (АЛГОРИТМ ПРИНЯТИЯ И ОТДАЧИ ДОМАШКИ):
    
(По желанию )В ответе подробно всё опишите и обязательно нужно указывать тайм код из видео где я это сказал, по желанию, дополнительно прикладываем скриншот из видео.
Если вы знаете ответы на вопросы из Вашего опыта, то таймкоды из видео не надо указывать и т.д.

1) Как понять, что домашка пришла?
  в чате [Senatorov bootcamp | Homework](https://t.me/c/1937296927/4496/) появляется сообщение с фразой "@my_telegram_user прими пул".
2) Как принять домашку?
  В приложении git desktop нижимаем кнопку "Pull origin" (fetch origin). Далее переходим во вкладку "history".
3) Зачем нужна кнопка history и какие функции появляются при нажатии правой кнопки мыши на коммит?
  Во вкладке "History" находим коммит, содержащий файл `hw.txt`.
  При вызове контекстного меню для элемента из списка "History" можно получить список методов доступных при работе с выбранным коммитом, в частности можно есть такой метода как "View on GitHub"
3.1) Где брать ссылку на коммит? куда её отправлять? 
  Можно использовать метод "View on GitHub".
4) Что такое файл лога? 
  Файл лога `log.ipynb` содержит описание выполненного задания.
4.1) Когда нужно его пушить?
  Когда выполнены все задания и они проверены исполнителем.
5) Что такое интерпритатор? 
  Интерпритатор - это программа, которая выполняет код.
6) Где можно выбрать интерпритатор?
  В приложении VS Code. В верхнем списке "Select Kernel"
7) Что такое модуль?  
  Модуль это файл, содержащий код на языке Python.
8) Как создать и отправить коммит?
  В приложении GitHub Desktop во вкладке "Changes"  ставим галочки по тем файлам, которые по смыслу относятся к планируемому коммиту. Заполняем заголовок и описание коммита. Далее нажимаем кнопку "Commit to Название_ветки", далее нажимаем кнопку "Push origin".
9) Как посмотреть что коммит точно отправлен и находится в github?
В списке вкладки "History" появится новая запись. В контекстном меню записи выбираем метод "View on GitHub" и в открытой странице браузера проверяем отправку коммита.  
10) Какая команда показывает что код не прошёл проверки на ошибки?
  Команда `pre-commit run --all-files` через терминал запускается в директории, в которой нужно сделать проверку.
10.1) Напишите список линтеров которые используются для проверки кода и дайте их краткую характеристику.
Линтеры:
  pylint
11) Как узнать какой именно линтер не прошёл проверку?
  В списке ошибок (и/или в терминале) после `nbqa` следует название линтера. На строке ниже указаны: файл и номер ячейке с ошибкой, код ошибки.
12) Линтер Pylint видит markdown? 
  Нет.
13) Номер ячейки в терминале и номер ячейки в vs code может отличаться? в каком случае?
  2
14) Где посмотреть номер ячейки в vscode?
  внизу справа: Call 1 of 1 (например).
15) В каком формате ipynb отправляется в гитхаб? причём здесь JSON?
  ipynb отправляется в гитхаб в формате JSON.
16) Где посмотреть в какой ячейке ошибка?
  см. ответ к п. 11
17) Как запустить терминал?
Меню сверху. Terminal -> New Terminal. 
18) Что такое линтер?
  Программа, которая проверяет код на соответствие стандартам
19) В какой сайт нужно вставлять код ошибки если ошибка связана с pylint?
  https://pylint.pycqa.org/
  или https://pylint.readthedocs.io/en/stable/search.html?q=<Code>
20) Секция pydocstyle в большинстве случае автоматический закрывается после исправления ошибок в каком линтере?
21) Что такое описание модуля? Оно должно отражать информацию о том что находится в модуле?
21) С какой  git команды начинается утро программиста?
  git pull origin
22) После внесения изменений в файлах, кнопка open in vs code пропадает в кошке, как по другому открыть vs code из кошки?
23) Что такое stash?
  Общее объяснение концепции.
  Команда git stash работает с незафиксированными изменениями в файлах.
23.1) Как сохранить стэш?
  git командa(подсказка: https://t.me/c/1937296927/3602/19531): 
    Команда git stash сохраняет текущие изменения в стек и сбрасывает их.
  Кнопка в vs code:
    Вкладка "Changes" -> "Stash" -> "Stash Changes"
23.2) Как восстановить стэш(подсказка: https://t.me/c/1937296927/3602/25747)?:
        Команда git stash pop восстанавливает последний сохранённый стэш.
  Кнопка в vs code:
    Вкладка "Changes" -> "Stash" -> "Pop Stash"
23.3) Различие между стэшем и коммитом.  
  Когда лучше сохранить изменения в стэше, а когда коммитить.
    Когда изменения не готовы к коммиту, но нужно их сохранить.
23.4) Как просмотреть список сохраненных стэшей?  
  git команда (подсказка: https://t.me/c/1937296927/3602/19531):
    Команда git stash list показывает список всех сохранённых стэшей.
  Кнопка в vs code:
    Вкладка "Changes" -> "Stash" -> "Stash List"
23.5) Как удалить стэш?  
        Команда git stash drop удаляет последний сохранённый стэш.
    Команды для удаления отдельных стэшей или всех сразу.
    git команда (подсказка: https://t.me/c/1937296927/3602/19531):
      git stash drop <stash_name>
      где <stash_name> - это название стэша, который нужно удалить.
      git stash drop (номер стэша)
      Команда git stash clear удаляет все сохранённые стэши.
23.6) Практические примеры использования стэша.  
  Краткие сценарии, где стэш помогает.
  Примеры использования стэша:
    - Когда нужно сохранить незафиксированные изменения, но не хочется их коммитить.
    - Когда нужно переключиться на другую ветку, но не хочется коммитить незафиксированные изменения.
    - Когда нужно откатить изменения, но не хочется коммитить незафиксированные изменения.
 24) Где посмотреть что есть конфликт в файлах? 
  В терминале после команды git pull origin.
24.1) Когда он появляется?
  Когда изменения в файлах не совпадают.
25) Как решить конфликт в файлах?
  В терминале после команды git pull origin.
26) Напишиие правильное утверждение
-Зелёное то что пришло с гитхаба и синее локальные изменения или синее то что пришло с гитхаба и зелёное это локальные изменения
Правильное утверждение:
  - Зелёное то что пришло с гитхаба, а синее локальные изменения
27) Если мы работаем в одном файле, можно ли принять pull после того как вы спрячете в стэш свои изменения? 
  Да, можно.
27.1) Что может произойти когда stash восстановите после принятия pull?
  Возможно появятся конфликты.
28) Сколько способов решения конфликтов было показано в видео? Напишите ЧИСЛО и укажите их способы.
  2 способа:
  1. git merge --abort - отменяет процесс слияния.
  2. git reset --hard - отменяет все изменения и сбрасывает состояние до последнего коммита.
29) Что делает кнопка complete merge?
  Кнопка "Complete Merge" завершает процесс слияния и применяет все изменения, разрешая все конфликты.
30) В какой чат нужно писать если остались вопросы?
  https://t.me/c/1937296927/ Секция "Help Me"

31) Что такое FORK? Зачем его делают? 
  FORK - это копия репозитория, которая создаётся для того, чтобы можно было работать с ним без влияния на оригинальный репозиторий.
32) Как скачать форкнутый репозиторий на локальный компьютер?
  В приложении GitHub Desktop нажимаем кнопку "Clone or download" и выбираем "Open in Desktop".
33) С какой вероятностью ваши ошибки были уже решены? и кто их решил?
  Вероятность 99.99(9)%.
34) Как создать файл в vs code?
  В приложении VS Code нажимаем кнопку "New File" и вводим название файла.
35) Файл лога нужно заполнять в конце каждого урока?
  Да, нужно.
==================

Дополнительные вопросы:
1)Какая команда конвертирует файл в py из ipynb? 
  nbqa nbconvert --to script *.ipynb
подсказка https://t.me/c/1937296927/1/26527 
2) Что такое пакетный менеджер?
     Пакетный менеджер - это программа, которая помогает управлять зависимостями и устанавливать библиотеки.
  Вы пользуетесь пакетным менеджером conda или pip?
    pip
  Какой лучше использовать для дата сайнс?
    conda
3) Почему расширение py лучше чем ipynb?
  Расширение py лучше чем ipynb, потому что py это исполняемый файл, а ipynb это не исполняемый файл.
4) Что такое pep8? 
подсказка:https://peps.python.org/pep-0008/
  PEP8 - это стандарт написания кода на языке Python.
4.1) линтеры проверяют на соблюдение pep8?
  Да, проверяют.
4.2) Какая нотация используется для создания переменных? 
  ответ на 85-95 страницы https://t.me/c/1937296927/1/16676
    snake_case
4.3) Может ли переменная состоять из одной буквы например андерскор  "_" ?
  Да, может.
4.4) Зачем и где мы используем андерскор _ 
  Андерскор _ используется для обозначения переменных, которые не используются в коде.
4.5) По PEP8 допустима переменная в одну букву?
  ответ на 85-95 страницы https://t.me/c/1937296927/1/16676
  Да, допустима.



