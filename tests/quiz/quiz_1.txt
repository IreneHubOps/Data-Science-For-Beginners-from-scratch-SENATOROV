Список вопросов к видео https://t.me/c/1937296927/765/29780 (АЛГОРИТМ ПРИНЯТИЯ И ОТДАЧИ ДОМАШКИ):
    
(По желанию )В ответе подробно всё опишите и обязательно нужно указывать тайм код из видео где я это сказал, по желанию, дополнительно прикладываем скриншот из видео.
Если вы знаете ответы на вопросы из Вашего опыта, то таймкоды из видео не надо указывать и т.д.

1 Как понять, что домашка пришла? - (0:10) В чате Homework, ник и прими пул
2 Как принять домашку? - (0:19) GitHub Desktop -> Fetch origin -> History -> Проверяем коммиты 
3 Зачем нужна кнопка history и какие функции появляются при нажатии правой кнопки мыши на коммит? - (14:23) В History находятся все коммиты, если нажать правой кнопкой мыши, то можно сразу открыть коммит на GitHub
3.1 Где брать ссылку на коммит? куда её отправлять? В GitHub, отправляем в телеграм чат - (14:46) Ссылку берем на GitHub из пункта 3.0, отправляем в чат Homework
4 Что такое файл лога? - (1:41) Файл с датой урока и что запомнил в течение урока
4.1 Когда нужно его пушить? - (3:50) Когда его написали, дали название и нажали commit to main
5 Что такое интерпритатор? - (3:18) Программа, которая читает и запускает наш код
6 Где можно выбрать интерпритатор? - (3:22) Выбираем в Python Environment 
7 Что такое модуль? - (9:46) Обычный файл .py или .ipynb
8 Как создать и отправить коммит? (3:53) GitHub Desktop -> Название коммита -> commit to main -> Push origin. После просмотра коммита на GitHub кидаем ссылку в Homework и пишем коммит отдал 
9 Как посмотреть что коммит точно отправлен и находится в github? - (4:15) History -> View on GitHub
10 Какая команда показывает что код не прошёл проверки на ошибки? - (6:29) pre-commit run --all-files
10.1 Напишите список линтеров которые используются для проверки кода и дайте их краткую характеристику.

Flake8: Объединяет несколько инструментов: pycodestyle (проверка PEP 8), pyflakes (поиск ошибок) и mccabe (анализ сложности кода).

Pylint: Проверяет код на соответствие PEP 8, ищет ошибки, дублирование кода и предлагает улучшения.

Black: Автоматический форматировщик кода, который приводит код к соответствию PEP 8.

mypy: Проверяет типы в Python

11 Как узнать какой именно линтер не прошёл проверку? - (7:12) Посмотреть имя линтера в ошибке
12 Линтер Pylint видит markdown? - (7:58) Нет, не видит
13 Номер ячейки в терминале и номер ячейки в vs code может отличаться? в каком случае? - (8:13) Может, если ячейка markdown, так как линтер ее не видит, тогда внизу справа будет написан реальный номер ячейки, а в терминале первая ячейка с кодом до ячейки с разметкой
14 Где посмотреть номер ячейки в vscode? - (7:32) Внизу справа плашка Cell
15 В каком формате ipynb отправляется в гитхаб? причём здесь JSON? - (3:51) Формат ipynb отображается в формате json на гитхаб
16 Где посмотреть в какой ячейке ошибка? - (8:28) Сопоставить номера ячеек в терминале и справа внизу или найти ошибку по Ctrl+F
17 Как запустить терминал? - (6:33) троеточие -> Terminal -> New Terminal
18 Что такое линтер? - (6:55) Программа, которая проверяет наш файл на корректность 
19 В какой сайт нужно вставлять код ошибки если ошибка связана с pylint? - (9:12) pylint.pycqa.org
20 Секция pydocstyle в большинстве случае автоматический закрывается после исправления ошибок в каком линтере? - (11:16) Автоматически закрывается после Pylint
21 Что такое описание модуля? Оно должно отражать информацию о том что находится в модуле? - (10:28) Описание модуля = какая информация в модуле
21 С какой  git команды начинается утро программиста?
22 После внесения изменений в файлах, кнопка open in vs code пропадает в кошке, как по другому открыть vs code из кошки? - (15:22) Надо нажать Current Repository -> ПКМ -> Open in vs code
23 Что такое stash? - (15:56) стэш это буфер куда мы временно прячем файлы, чтобы принять pull
  Общее объяснение концепции.
23.1 Как сохранить стэш?
  git командa(подсказка: https://t.me/c/1937296927/3602/19531):
  - git stash

  Кнопка в vs code: Source Control -> ... -> Stash -> Apply Stash 

23.2 Как восстановить стэш(подсказка: https://t.me/c/1937296927/3602/25747)?:

      git команда(подсказка: https://t.me/c/1937296927/3602/19531)?: 
      - git stash pop

23.3 Различие между стэшем и коммитом.  
  Когда лучше сохранить изменения в стэше, а когда коммитить. - Стеш используется для сохранения временных, незакоммиченных изменений. Если мы хотим обновить ветку, но в ней есть незакомиченные изменения, то лучше использовать стеш; Коммит - постоянное сохранение изменений в истории Git. Его лучше использовать, если завершена логическая часть работы
23.4 Как просмотреть список сохраненных стэшей?  
  git команда (подсказка: https://t.me/c/1937296927/3602/19531):
- git stash list
23.5 Как удалить стэш?  
  Команды для удаления отдельных стэшей или всех сразу.
  git команда (подсказка: https://t.me/c/1937296927/3602/19531):
- git stash drop
- git stash clear 
23.6 Практические примеры использования стэша.  
  Краткие сценарии, где стэш помогает. - когда нужно срочно переключиться на другую ветку, при обновлении ветки, при сбросе ветки до последнего коммита 

24 Где посмотреть что есть конфликт в файлах? - (17:11) в GitHub Desktop
24.1 Когда он появляется? - (17:13) После восстановления локальных изменений Git не понимает какие изменения сохранять: из интернета или локальные и возникает конфликт 
25 Как решить конфликт в файлах? - (17:37) Нажимаем Accept Current Change
26 Напишите правильное утверждение
-Зелёное то что пришло с гитхаба и синее локальные изменения или синее то что пришло с гитхаба и зелёное это локальные изменения - (17:45) Зелёное то что пришло с гитхаба и синее локальные изменения
27 Если мы работаем в одном файле, можно ли принять pull после того как вы спрячете в стэш свои изменения? - (19:07) Да, иначе возникнет конфликт в файлах
27.1 Что может произойти когда stash восстановите после принятия pull?
28 Сколько способов решения конфликтов было показано в видео? Напишите ЧИСЛО и укажите их способы. - (17:37) 4 способа: Accept Current Change (рекомендуется, принимает входящее изменение), Accept Incoming Change (не рекомендуется, принимает только локальное изменение), Accept Both Changes (принимает оба изменения), Вручную (самостоятельно удалять и оставлять нужные изменения)
29 Что делает кнопка complete merge? - (18:48) завершает процесс слияния
30 В какой чат нужно писать если остались вопросы? - (19:41) Help Me
31 Что такое FORK? Зачем его делают? - (20:34) Копируем чужой репозиторий и делаем его личным
32 Как скачать форкнутый репозиторий на локальный компьютер? - (21:00) Clone Repository -> Выбираем репозиторий из списка -> Done
33 С какой вероятностью ваши ошибки были уже решены? и кто их решил? - (13:47) В Help Me есть ошибки, которые решили коллеги с вероятностью 90%
34 Как создать файл в vs code? - File -> New File
35 Файл лога нужно заполнять в конце каждого урока? - (1:39) Да
==================

Дополнительные вопросы:
1 Какая команда конвертирует файл в py из ipynb? - (pip install nbconvert) jupyter nbconvert --to script ваш_файл.ipynb
подсказка https://t.me/c/1937296927/1/26527 
2 Что такое пакетный менеджер? Вы пользуетесь пакетным менеджером conda или pip? Какой лучше использовать для дата сайнс? - Инструмент, который помогает устанавливать, обновлять, удалять и управлять программными пакетами в среде разработки. Для дата сайнс мы используем conda
3 Почему расширение py лучше чем ipynb? - Потому что лучше совместим с Git. ipynb хранится в формате JSON, что затрудняет чтение и слияние
4 Что такое pep8? - Руководство по стилю написания кода на Python 
подсказка:https://peps.python.org/pep-0008/
4.1 линтеры проверяют на соблюдение pep8? - Да, Flake8, Pylint или autopep8. Эти линтеры анализируют код и указывают на нарушения PEP 8
4.2 Какая нотация используется для создания переменных? 
ответ на 85-95 страницы https://t.me/c/1937296927/1/16676 -

Все буквы должны быть буквами ASCII — то есть латинскими буквами верхнего и нижнего регистров без диакритических знаков.
Имена модулей должны быть короткими и состоять только из букв нижнего регистра.
Имена классов необходимо записывать в схеме Pascal.
Имена констант следует записывать в верхнем змеином регистре.
Имена функций, методов и переменных записывают в нижнем змеином регистре.
Первый аргумент методов всегда должен называться self в нижнем регистре.
Первый аргумент методов классов всегда должен называться cls в нижнем регистре.
Приватные атрибуты классов всегда начинают с символа подчеркивания ( _ ).
Публичные атрибуты классов никогда не начинают с символа подчеркива-
ния ( _ )

4.3 Может ли переменная состоять из одной буквы например андерскор  "_" ? - Да, может
4.4 Зачем и где мы используем андерскор _ В переменных: _variable, если переменная предназначена для внутреннего использования; variable_ используется, чтобы избежать конфликта со значениями, зарезервированными в питоне. В циклах: если в цикле for значение переменной не входит в сам цикл, то ее обозначают _
4.5 По PEP8 допустима переменная в одну букву? - Допустимо, но рекомендуется делать имена понятными для чтения
ответ на 85-95 страницы https://t.me/c/1937296927/1/16676


