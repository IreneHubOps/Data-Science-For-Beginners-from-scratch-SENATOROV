"""Part about issues."""

# Общие вопросы
#
# Что такое Issues на GitHub и для чего они используются?
#     - Инструмент для отслеживания багов, задач, идей. Помогают упорядочить процесс разработки и улучшения проекта.
# Чем Issues отличаются от других инструментов управления задачами?
#     - Прямая связь с кодом, комитами, репозиторием. Возможность комментировать, создавать sub-issues, автоматизация закрытия.
# Какие основные компоненты (поля) есть у каждого Issue?
#     - Title, Description, Comments, Labeles
#
#
# Создание Issues
#
# Как создать новое Issue в репозитории?
#     - Необходимо перейти в нужный репозиторий -> открыть вкладку Issues -> нажать кнопку "New Issue" -> заполнить все необходимые поля
#     -> нажать кнопку Submit new issue
# Какие данные рекомендуется указывать в описании Issue для лучшего понимания задачи?
#     - Title с подробным описанием проблемы, Description с более подробным описанием проблемы, возможно приложить скрины, код, ссылку
# Какие теги (labels) можно добавить к Issue? Какие из них стандартные?
#     - Bug, enhancement, documentation, question
# Как прикрепить Assignees (ответственных) к Issue?
#     - В правой части страницы найти блок Assignees
#
#
# Работа с Issues
#
# Как использовать Labels для классификации задач?
#     - Для каждого типа задач использовать свой label.
# Для чего нужен Milestone, и как связать его с Issue?
#     - Milestone показывают к какому дню ожидается решение Issue
# Как привязать Issue к пул-реквесту (Pull Request)?
#     - В описании Pull Request написать ключевое слово и номер Issue - например Closes #номер_задачи
# Как добавить комментарий к существующему Issue?
#     - Выбрать нужный Issue и нажать внизу страницы - Leave a comment
#
# Закрытие и завершение Issues
#
# Как закрыть Issue вручную?
#     - Зайти в Issues и нажать кнопку Close Issue, можно добавить комментарий
# Можно ли автоматически закрыть Issue с помощью сообщения в коммите или пул-реквесте? Как это сделать?
#     - Для этого в комите или в комментарии к пул-реквесту нужно использовать специальные слова - Closes, Fixes, Resolves
# Как повторно открыть закрытое Issue, если работа ещё не завершена?
#     - Открыть нужный Issue, нажать кнопку Reopen issue, добавить комментарий принеобходимости
#
# Фильтрация и поиск
#
# Как найти все открытые или закрытые Issues в репозитории?
#     - Вкладка Issues, по умолчанию выводятся все открытые. Чтобы вывести закрытые, нужно нажать на фильтр Closed
# Как использовать фильтры для поиска Issues по меткам, исполнителям или другим критериям?
#     - Использовать филтры в интерфейсе
# Как сортировать Issues по приоритету, дате создания или другим параметрам?
#     - Использовать кнопку Newest
#
#
# Интеграции и автоматизация
#
# Как настроить автоматические уведомления о новых или изменённых Issues?
#     - Зайти в нужный репозиторий, нажать на глазок, выбрать Custom -> Issues
# Что такое Projects в контексте GitHub, и как связать их с Issues?
#     - Projects это инструмент для управления задачами, пул реквестами, которые оформляются в виде карточек. К карточке можно
#     привязать Issue
# Какие сторонние инструменты можно использовать для автоматизации работы с Issues (например, боты, Webhooks)?
#     - Можно использовать встроенный GitHub Actions - это инструмент для автоматизации добавления меток,
#     назначения исполнителя
#
# Коллаборация
#
# Как упомянуть другого пользователя в комментарии к Issue?
#     - тегнуть его через @username
# Как запросить дополнительные данные или уточнения у автора Issue?
#     - через комментарии в самом Issue
# Что делать, если Issue неактуально или его нужно объединить с другим?
#     - саначала закрыть неакутальный, и добавить комментарий в оба Issue почему они объединяются
#
# Практические аспекты
#
# Как использовать шаблоны для создания Issues?
#     - В папку .github/ISSUE_TEMPLATE/ поместить свой шаблон
# Что такое Linked Issues, и как создать связь между задачами?
#     - Linked Issues - это функция для связывания Issues между собой.
#     В комментарии к Issue упомяните связанное Issue с помощью #
# Какие метрики (например, время выполнения) можно отслеживать с помощью Issues?
#     - Количество открытых/закрытых Issues, среднее время закрытия Issue, количество Issues по исполнителям
# Какие best practices рекомендуются при работе с Issues в команде?
#     - Четко формулировать заголовки и описания, использовать метки, майлстоуны, испоьлзовать Linked Issues
#
#
