"""Part about issues."""

# # Общие вопросы
#
# ## Что такое Issues на GitHub и для чего они используются?
# - **Issues** — это инструмент для отслеживания багов, задач и идей. Они помогают упорядочить процесс разработки и улучшения проекта.
#
# ## Чем Issues отличаются от других инструментов управления задачами?
# - Прямая связь с кодом, коммитами и репозиторием. Возможность комментировать, создавать подзадачи (sub-issues) и автоматизировать закрытие.
#
# ## Какие основные компоненты (поля) есть у каждого Issue?
# - **Title**, **Description**, **Comments**, **Labels**.
#
# ---
#
# # Создание Issues
#
# ## Как создать новое Issue в репозитории?
# 1. Перейдите в нужный репозиторий.
# 2. Откройте вкладку **Issues**.
# 3. Нажмите кнопку **"New Issue"**.
# 4. Заполните все необходимые поля.
# 5. Нажмите кнопку **Submit new issue**.
#
# ## Какие данные рекомендуется указывать в описании Issue для лучшего понимания задачи?
# - **Title** с подробным описанием проблемы.
# - **Description** с более подробным описанием проблемы.
# - Возможно приложить скриншоты, код или ссылки.
#
# ## Какие теги (labels) можно добавить к Issue? Какие из них стандартные?
# - Стандартные метки: `bug`, `enhancement`, `documentation`, `question`.
#
# ## Как прикрепить Assignees (ответственных) к Issue?
# - В правой части страницы найдите блок **Assignees** и выберите нужного пользователя.
#
# ---
#
# # Работа с Issues
#
# ## Как использовать Labels для классификации задач?
# - Для каждого типа задач используйте соответствующую метку (например, `bug` для ошибок, `enhancement` для улучшений).
#
# ## Для чего нужен Milestone, и как связать его с Issue?
# - **Milestone** указывает срок выполнения задачи. Чтобы связать Issue с Milestone, выберите его в соответствующем блоке справа.
#
# ## Как привязать Issue к пул-реквесту (Pull Request)?
# - В описании Pull Request используйте ключевые слова, например: `Closes #номер_задачи`, `Fixes #номер_задачи`.
#
# ## Как добавить комментарий к существующему Issue?
# - Выберите нужный Issue и нажмите внизу страницы **Leave a comment**.
#
# ---
#
# # Закрытие и завершение Issues
#
# ## Как закрыть Issue вручную?
# - Зайдите в Issues и нажмите кнопку **Close Issue**. Можно добавить комментарий.
#
# ## Можно ли автоматически закрыть Issue с помощью сообщения в коммите или пул-реквесте? Как это сделать?
# - Да, для этого в коммите или в комментарии к Pull Request используйте специальные слова: `Closes`, `Fixes`, `Resolves`.
#
# ## Как повторно открыть закрытое Issue, если работа ещё не завершена?
# - Откройте нужный Issue, нажмите кнопку **Reopen issue** и добавьте комментарий при необходимости.
#
# ---
#
# # Фильтрация и поиск
#
# ## Как найти все открытые или закрытые Issues в репозитории?
# - Перейдите в вкладку **Issues**. По умолчанию выводятся все открытые. Чтобы вывести закрытые, нажмите на фильтр **Closed**.
#
# ## Как использовать фильтры для поиска Issues по меткам, исполнителям или другим критериям?
# - Используйте фильтры в интерфейсе GitHub.
#
# ## Как сортировать Issues по приоритету, дате создания или другим параметрам?
# - Используйте кнопку **Newest** для сортировки по дате создания.
#
# ---
#
# # Интеграции и автоматизация
#
# ## Как настроить автоматические уведомления о новых или изменённых Issues?
# - Зайдите в нужный репозиторий, нажмите на значок глаза (**Watch**), выберите **Custom** → **Issues**.
#
# ## Что такое Projects в контексте GitHub, и как связать их с Issues?
# - **Projects** — это инструмент для управления задачами и Pull Request'ами, которые оформляются в виде карточек. К карточке можно привязать Issue.
#
# ## Какие сторонние инструменты можно использовать для автоматизации работы с Issues (например, боты, Webhooks)?
# - Можно использовать встроенный **GitHub Actions** для автоматизации добавления меток, назначения исполнителей и других задач.
#
# ---
#
# # Коллаборация
#
# ## Как упомянуть другого пользователя в комментарии к Issue?
# - Упомяните его через `@username`.
#
# ## Как запросить дополнительные данные или уточнения у автора Issue?
# - Через комментарии в самом Issue.
#
# ## Что делать, если Issue неактуально или его нужно объединить с другим?
# - Сначала закройте неактуальный Issue, а затем добавьте комментарий в оба Issue, объясняя причину объединения.
#
# ---
#
# # Практические аспекты
#
# ## Как использовать шаблоны для создания Issues?
# - Поместите шаблон в папку `.github/ISSUE_TEMPLATE/`.
#
# ## Что такое Linked Issues, и как создать связь между задачами?
# - **Linked Issues** — это функция для связывания Issues между собой. В комментарии к Issue упомяните связанное Issue с помощью `#`.
#
# ## Какие метрики (например, время выполнения) можно отслеживать с помощью Issues?
# - Количество открытых/закрытых Issues, среднее время закрытия Issue, количество Issues по исполнителям.
#
# ## Какие best practices рекомендуются при работе с Issues в команде?
# - Четко формулировать заголовки и описания, использовать метки, Milestones, Linked Issues.
