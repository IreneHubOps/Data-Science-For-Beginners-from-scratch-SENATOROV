"""Detailed explanation about  Python interpreters."""

# ### Что такое CPython и чем он отличается от Python?
#
# CPython - стандартный интерпретатор Python, реализованный на языке программирования C.
# По сути CPython является наиболее популярной и широко используемой реализацией Python. Главным отличием является то что Python не зависит от языка реализации и может быть реализован на многих языках проограммирования.

# ###  Сколько существует реализаций Python, и какая из них самая популярная?
#
# Существует много реализаций Python:
#
# 1. CPython - говорили о ней выше и является наиболее популярным.
# 2. IPython - интерпретатор по умолчанию, есть ограничения - нету отступов, выделения синтаксиса цветом.
# 4. PyPy - Этот интерпретатор Python реализован в RPython, цель обеспечить максимальную совместимость с реализацией CPython и в то же время увеличить производительность
# 5. Jython - реализация на языке Java, интеграция с Java-кодом и его библиотеками. позволяет запускать код Python на любой машине, на которой установлена JVM.
# 6. lronPython - создан для платформы .NET, в которой используются библиотеки Python и .NET.
# 7. PythonNet - бесшовная интеграция Python с .NET CLR.
#
#
#

# ### На каком языке написан CPython?
#
# На языке C

# ###  Почему Python считается быстрым, несмотря на то, что это интерпретируемый язык?
#
# Он считается быстрым за счет богатой экосистемы и поддержки большого количества библиотек. Но в плане быстроты уступает компилируемым языкам таким как C и C++
#

# ###  Напишите путь к Интерпретатору CPython на вашем компьютере
#
# `C:\Users\Admin\AppData\Local\Programs\Python\Python313`

# ### Что содержится в папке include в CPython?
#
# В папке содержатся файлы с расширением .h, эти файлы позволяют разработчикам писать расширения или использовать встроенные возможности Python на уровне C. Эти файлы служат мостом между Python и внешним кодом на C или C++.
#

# ### Где можно найти исходный код CPython дайте ссылку на репозиторий гитхаб
#
# `https://github.com/python/cpython`

# ### Какая команда используется для запуска файла с помощью CPython?
#
# `python file_name.py`

# ###  Можно ли запускать текстовые файлы через интерпретатор Python? Почему?
#
# Да, можно. Главное чтоб текстовый файл содержал код и его можно запустить.

# ###  Как указать путь к интерпретатору и файлу для выполнения кода?
#
# Сперва указываем путь к exe файлу python а затем полный путь к самому файлу
#
# `C:\Users\Admin\AppData\Local\Programs\Python\Python313\python.exe C:\Users\Admin\AppData\Local\Programs\Python\Python313\test.txt`

# ###  Чем PyPy отличается от CPython?
#
# Он быстрее и фокусируется на производительности. Отличается от CPython тем, что PyPy использует механизм Just-In-Time (JIT) компиляции, который компилирует код в машинный код во время выполнения, что ускоряет выполнение программ

# ### Почему PyPy не может использоваться для всех проектов на Python?
#
# Многие проекты используют библиотеки, написанные на C или C++, такие как NumPy, SciPy, TensorFlow и другие. Эти библиотеки взаимодействуют с Python через API CPython. Так же PyPy использует больше оперативной памяти чем CPython а это как мы знаем одна из критических факторов.
#

# ### Где можно скачать PyPy?
#
# `https://www.pypy.org/download.html`

# ###  Как установить PyPy после скачивания?
#
# Распаковать архив где лежит файл с PyPy
#
# ### Как запустить файл с помощью PyPy?
#
# Та же система что и для Cpython, путь дл PyPy + путь до файла

# ###  Почему PyPy выполняет код быстрее, чем CPython?
#
# Благодаря JIT компиляции, CPython выполняет код построчно, преобразуя его в машинный код. PyPy преобразовывает в машинный код во время работы программы а не  интерпретирует каждый раз заново.

# #### 1.  Проверка версии CPython
#
# Python 3.13.0
#
# #### 2. Исследование структуры CPython
#
# Всего в папке  77 файлов
#
# #### 3. Запуск файла с помощью CPython
#
# Output: Hello from CPython!
#
# #### 4. Установка и использование PyPy
#
# Output : Hello from pypy!
#
# #### 5. Сравнение производительности CPython и PyPy
#
# PyPy:
#
# * Result: 49999995000000
# * Execution time: 0.008002281188964844 seconds
#
# CPython:
# * Result: 49999995000000
# * Execution time: 0.5600907802581787 seconds
#
#
# Результаты показывают что PyPy быстрее в  69 раз!
