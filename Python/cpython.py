"""Python и CPython, PyPy."""

# 1. Что такое CPython и чем он отличается от Python?
#
# ![image.png](attachment:image.png)

# Python — это язык программирования, спецификация, стандарты и синтаксис, которые описывают, как должен вести себя язык. Это абстрактная концепция, не привязанная к конкретной реализации.
#
# CPython — это конкретная реализация языка Python. Это интерпретатор, который читает и выполняет код на Python, используя низкоуровневые механизмы на языке C.

# 3. Сколько существует реализаций Python, и какая из них самая популярная?
# 7 реализаций
# 1. CPython
# 2. PyPy
# 3. Jython
# 4. IronPython
# 5. Stackless Python
# 6. MicroPython
# 7. CircuitPython
# Самая популярная реализация: CPython.

# 4. На каком языке написан CPython?
# На языке С

# 5. Кто создал CPython?
# Гвидо ван Россум
# 6. Почему Python считается быстрым, несмотря на то, что это интерпретируемый язык?
# Python считается относительно быстрым, так как в нем используется байт-код, C-расширения для быстродействующих операций, а также из-за наличия инструментов, таких как JIT-компиляция и асинхронное программирование.
# 7. Напишите путь к Интерпретатору CPython на вашем компьютере
# C:\Users\zyran\AppData\Local\Programs\Python\Python312\include\cpython

# 8. Что содержится в папке include в CPython?
# В папке include в CPython содержатся заголовочные файлы, которые необходимы для разработки C-расширений, работы с внутренними объектами и API Python, а также для взаимодействия с системой и другими библиотеками.
# 9. Где можно найти исходный код CPython дайте ссылку на репозиторий гитхаб
# https://github.com/python/cpython
# 10. Как работает интерпретатор CPython при выполнении кода?
# CPython — это интерпретатор и компилятор, который сначала компилирует код Python в байт-код, а затем выполняет его на виртуальной машине Python (PVM). Давайте рассмотрим, как этот процесс работает поэтапно.

# 11. Какая команда используется для запуска файла с помощью CPython?
# python <путь_к_файлу>.py
# 12. Можно ли запускать текстовые файлы через интерпретатор Python? Почему?
# Интерпретатор Python исполняет только файлы, содержащие допустимый Python-код. Если текстовый файл имеет расширение .py и в нем находится Python-код, то этот файл можно выполнить как обычный скрипт. Если текстовый файл не содержит Python-код, интерпретатор Python не сможет его исполнить, и будет выведена ошибка синтаксиса.
# 13. Как указать путь к интерпретатору и файлу для выполнения кода?
# C:\Python\python.exe C:\Users\user\<'Название файла'>.py

# 14. Чем PyPy отличается от CPython?
# В некоторых случаях производительность PyPy может быть в несколько раз лучше, чем у CPython. Поскольку CPython является стандартной реализацией Python, он гарантированно совместим с большинством библиотек и фреймворков, написанных для Python. PyPy: PyPy обычно совместим с Python 2.x и Python 3.x, но возможны некоторые различия в работе с расширениями, написанными на C. PyPy обычно использует меньше памяти для хранения объектов, что позволяет в некоторых случаях работать с более крупными данными. PyPy поддерживает C-расширения через интерфейсы, такие как CFFI (C Foreign Function Interface), однако не все C-расширения для CPython могут работать с PyPy без дополнительных усилий, и некоторые могут не работать вовсе. PyPy поддерживает стандарт Python в целом, но иногда могут возникать небольшие несовпадения в поведении или особенности реализации. Однако PyPy активно обновляется, чтобы оставаться совместимым с последними версиями Python.

# 15. Почему PyPy не может использоваться для всех проектов на Python? В основсном из-за проблем с совместимостью с некоторыми фреймворками или сторонними библиотеками
# 16. Где можно скачать PyPy?
# Официальный сайт PyPy: https://www.pypy.org

# 17. Как установить PyPy после скачивания?
# Распакуйте архив в удобное место, например в папку C:\pypy.
# После распаковки, в папке с PyPy будет исполняемый файл pypy.exe. Вы можете добавить путь к этому файлу в переменную окружения PATH, чтобы запускать PyPy из любой директории в командной строке.
# 18. Как запустить файл с помощью PyPy?
# pypy <путь_к_файлу>.py
# 19. Почему PyPy выполняет код быстрее, чем CPython?
# PyPy использует JIT-компиляцию, которая компилирует Python-код в машинный код во время выполнения программы. В процессе выполнения программы PyPy может динамически оптимизировать некоторые части кода, что приводит к ускорению по сравнению с традиционным интерпретатором, который просто выполняет байт-код.

# Практические задания
# Задание 1: Поиск и установка CPython
# CPython установлен
# Задание 2: Исследование структуры CPython
# В папке include 7 файлов на букву С
# информацию прочитала
# Задание 3: Запуск файла с помощью CPython
# Done
# Задание 4: Установка и использование PyPy
# Done
# Задание 5: Сравнение производительности CPython и PyPy
# CPython:
# Result: 49999995000000
# Execution time: 1.1570260524749756 seconds
# PyPy:
# Result: 49999995000000
# Execution time: 0.03732728958129883 seconds
