"""Работа с виртуальным окружением."""

# 1. Что делает команда python -m venv venv?
# Создает виртуальное окружение

# - pip list - выводит список всех установленных
#  пакетов Python в текущей среде.
#  Она показывает названия пакетов и их версии.

#  - pip freeze > requirements.txt - Эта команда создает файл с именем requirements.txt,
#  в который записывается список всех установленных
#   пакетов и их точные версии.
#
#   - pip install -r requirements.txt
#   устанавливает все указанные  пакеты в файле requirements.txt.
#
# - conda env list - выводит список всех виртуальных сред
#
# - conda create -n env_name python=3.5 - создает новую виртуальную среду с
#  именем env_name и устанавливает в нее Python версии 3.5
#
# - conda env update -n env_name -f file.yml - обновляет пакеты в
# виртуальной среде env_name в соответствии
#  со списком, указанным в файле file.yml.
#
# - source activate env_name - активация виртуальной среды
#
# - source deactivate - деактивирует
#
# - conda clean -a - удаляет все временные файлы, кеши и другие неиспользуемые файлы,
# связанные с conda.

# ![alt text](image.png)

# ![alt text](image-1.png)

# 4. Как установить необходимые пакеты внутрь
# виртуального окружения для conda/venv?
#
# Для conda: conda install packet_name
#
# Для venv: pip install packet_name

# Что делают эти команды?
#
# pip freeze > requirements.txt - список всех установленных пакетов
# в виртуальном окружении(venv)
#
# conda env export > environment.yml - список всех установленных пакетов и их версии в conda

# 5.1 ![alt text](image-2.png)

# 6. Что делают эти команды?
#
# pip install -r requirements.txt - устанавливает все пакеты, перечисленные
# в файле requirements.txt, в текущее
# виртуальное окружение (venv или conda).
#
# conda env create -f environment.yml. -создает новое conda-окружение
# и устанавливает в него все зависимости,
# указанные в файле environment.yml.

# 7. Что делают команды?
#
# pip list
# показывает список всех установленных пакетов
# и их версий в текущем виртуальном окружении
# (используется с venv/conda).
#
# pip show
# отображает подробную информацию
# о конкретном установленном пакете,
#  включая его версию,
#   местоположение и зависимости.
#
# conda list
# показывает список всех пакетов, установленных
#  в текущем conda-окружении, включая версии и
#  каналы, откуда они были установлены.

# 8. Где по умолчанию больше пакетов venv/pip или
# conda?
# и почему дата сайнинисты используют conda?
#
# Конечно в conda, она поставляется
#  с набором базовых библиотек (numpy, scipy, pandas)
#  и инструментов, необходимых для нас.
#  сonda поддерживает как Python,
#   так и библиотеки на других языках (например, R, C).
#   Поэтому он такой удобный для нас, не надо ходить далеко
#   все в одном месте

# 9. вставьте скрин где будет видно, Выбор интерпретатора Python (conda) в VS Code/cursor

# ![alt text](image-3.png)

# 10. Зачем нужно виртуально окружение?
#
# Виртуальные окружения в Python создаются для того,
#  чтобы изолировать пакеты проектов друг от друга.
#  Это особенно полезно при работе с несколькими проектами,
#  которые требуют разных версий библиотек или инструментов.

# 11. С этого момента надо работать в виртуальном окружении conda,
#  ты научился(-ась) выгружать зависимости и работать с окружением?
#  Да, научилась.
