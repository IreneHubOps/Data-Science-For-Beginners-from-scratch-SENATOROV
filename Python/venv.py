"""Виртуальное окружение."""

# 1. Что делает команда python -m venv venv?
# Создает в текущем каталоге папку с именем venv, которая будет содержать отдельную копию интерпретатора Python. 
# Это позволяет изолировать зависимости для конкретного проекта, чтобы избежать 
# конфликтов с глобальными библиотеками системы. После активации виртуального окружения, любые установленные
# библиотеки будут попадать в это окружение, а не в глобальную среду.
#

# 1.1. Что делает каждая команда в списке ниже?
#
# pip list  - Команда pip list используется для вывода списка всех установленных пакетов и их версий в
# текущем окружении (либо в глобальном, либо в виртуальном).
# pip freeze > requirements.txt   - используется для создания файла requirements.txt, который содержит
# список всех установленных пакетов и их версий в текущем виртуальном окружении или глобальной среде.
# pip install -r requirements.txt  - эта команда установит все пакеты, перечисленные в requirements.txt, 
# с указанными версиями.

# 1.2. Что делает каждая команда в списке ниже?
#
# conda env list  - отображает список всех существующих окружений, созданных с помощью Conda.
# conda create -n env_name python=3.5  - эта команда с помощью conda создаст новое окружение
# с именем env_name (вписать нужное имя) и установит в него Python 3.5.
# conda env update -n env_name -f file.ylm  -  команда обновит окружение env_name, используя
# зависимости, указанные в файле file.ylm.
# source activate env_name  - В старых версиях Conda (до 4.4) команда использовалась для активации
# окружения, в новых - conda activate env_name
# source deactivate  В старых версиях Conda (до 4.4) команда использовалась для деактивации
# окружения, в новых - conda deactivate env_name
# conda clean -a  - очищает все кэши и ненужные файлы, связанные с Conda.

# вставьте скрин вашего терминала, где вы активировали сначала venv, потом conda, назовите окружение "SENATOROV"
# ![image.png](attachment:image.png)

# ![image.png](attachment:image.png)

# Как установить необходимые пакеты внутрь виртуального окружения для conda/venv?
#
# После активации виртуального окружения venv вы можете устанавливать пакеты с помощью pip, 
# например: pip install requests pandas numpy
# После активации окружения conda можно использовать команду conda install для установки пакетов,
#  например: conda install requests pandas numpy
#

# Что делают эти команды?
# pip freeze > requirements.txt
# conda env export > environment.yml
#
# Команда pip freeze> requirements.txt сохраняет список всех установленных в текущем виртуальном
#  окружении Python пакетов, в файл requirements.txt.
# Команда conda env export создает YAML-файл, который содержит все пакеты, установленные в текущем
#  окружении conda, сохраняет вывод этой команды в файл environment.yml

# ![image.png](attachment:image.png)
# ![image-2.png](attachment:image-2.png)
# ![image-3.png](attachment:image-3.png)

# Что делают эти команды?
# pip install -r requirements.txt
# conda env create -f environment.yml.
#
# Эти команды используются для установки зависимостей из файлов, которые были ранее созданы с помощью
# команд  pip freeze > requirements.txt и conda env export > environment.yml.

# Где по умолчанию больше пакетов venv/pip или conda? и почему дата сайнинисты используют conda?
# По умолчанию пакетов больше в venv/pip
# Дата-сайентисты предпочитают conda из-за ее удобства, производительности и широкого набора пакетов,
# связанными с большими данными и научными вычислениями, которые скомпилированы и оптимизированы для
# работы на различных операционных системах.

# Зачем нужно виртуально окружение?
# Виртуальное окружение помогает управлять зависимостями, изолировать проекты, и обеспечивает чистоту
# системы при работе с несколькими пактами.

# С этого момента надо работать в виртуальном окружении conda, ты научился(-ась) выгружать зависимости и работать с окружением?
# Более-менее :)
