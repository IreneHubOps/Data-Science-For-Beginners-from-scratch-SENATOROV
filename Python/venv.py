"""Detailed explanation about virtual environment."""

# #### 1. Что делает команда python -m venv venv?
#
# Используется для создания виртуального окружения
#
# #### 2. Что делает каждая команда в списке ниже?
#
# * pip list - выводит список всех установленных библиотек Python и их версий в текущей среде
#
# * pip freeze > requirements.txt  - сохраняет список всех установленных библиотек и их версий в текущей среде в файл requirements.txt
#
# * pip install -r requirements.txt используется для установки всех зависимостей, перечисленных в файле requirements.txt
#
# * conda env list - используется для отображения списка всех доступных сред (environments), созданных с помощью Conda.
#
# * conda create -n env_name python=3.5 - cоздаёт новую среду с именем env_name и устанавливает в неё Python версии 3.5.
#
# * conda env update -n env_name -f file.yml - обновляет среду с именем env_name на основе конфигурации, указанной в файле file.yml.
#
# * source activate env_name -  активирует среду с именем env_name, позволяя работать в её контексте.
#
# * source deactivate - деактивирует текущую активную среду, возвращая сессию терминала в базовую (base) среду
#
# * conda clean -a - очищает кеш Conda, включая все временные файлы, неиспользуемые пакеты и индексы репозиториев.
#

# ![image-2.png](attachment:image-2.png)

# ![image.png](attachment:image.png)

# ####  4. Как установить необходимые пакеты внутрь виртуального окружения для conda/venv?
#
# ##### Установка окружения conda
#
# conda create -n SENATOROV python=3.11
#
# conda activate SENATOROV
#
# ##### Установка оркужения venv
#
# python -m venv SENATOROV
#
# # cd ./SENATOROV/Scripts
#
# ./activate
#

# #### 6. Что делают эти команды?
#
# pip install -r requirements.txt - используется в Python для установки пакетов из файла requirements.txt, который содержит список зависимостей.
#
#
# conda env create -f environment.yml. - для создания окружения и установки пакетов, определенных в файле environment.yml.

# +


pip install -r requirements.txt
# -

# !conda env create -f environment.yml

pip freeze > requirements.txt

# !conda env export > environment.yml

# #### 7. Что делают эти команды?
#
# pip list - показывает список всех пакетов, установленных в текущем виртуальном окружении
#
# pip show - выводит подробную информацию об установленном пакете
#
# conda list - показывает список всех пакетов, установленных в активированном окружении Conda

pip list

pip show asttokens     

# !conda list 

# #### 8. Где по умолчанию больше пакетов venv/pip или conda? и почему дата сайнинисты используют conda?
#
# PyPI (pip) имеет больше пакетов, чем Conda.
#
# Дата сайнтисты используют conda так как conda позволяет легко установить пакеты для машинного обучения, автоматически устанавливая все зависимости, включая системные библиотеки
#
# Conda отлично работает в средах, где нужны определённые версии Python или библиотек.
#

# ![image.png](attachment:image.png)

# #### 10. Зачем нужно виртуально окружение?
#
# Виртуальное окружение — это изолированная среда, в которой можно устанавливать и использовать Python-библиотеки. Оно позволяет избежать конфликтов между различными версиями библиотек и обеспечивает чистую, контролируемую рабочую среду.
#

# #### 11. С этого момента надо работать в виртуальном окружении conda, ты научился(-ась) выгружать зависимости и работать с окружением?
#
# Да


