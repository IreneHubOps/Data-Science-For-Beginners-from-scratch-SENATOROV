"""Git stash."""

# 1. Что делает команда git stash?
#     Команда `git stash` используется для временного сохранения изменений в рабочем каталоге и индексе, чтобы можно было переключиться на другую ветку или выполнить другие действия без необходимости коммитить незавершённые изменения. Сохранённые изменения можно затем применить обратно или удалить.
# 2. Как просмотреть список всех сохранённых изменений (стэшей)?
#     Команда `git stash list` позволяет просмотреть список всех сохранённых изменений (стэшей). Каждый стэш имеет уникальный идентификатор, который можно использовать для управления стэшами.
# 3. Какая команда применяется для использования верхнего стэша?
#     Команда `git stash pop` применяется для использования верхнего стэша. Эта команда применит верхний стэш к текущему состоянию рабочего каталога и индекса, а затем удалит этот стэш из списка стэшей.
# 4. Как применить конкретный стэш по его номеру?
#     Чтобы применить конкретный стэш по его номеру, можно использовать команду `git stash apply` с указанием номера стэша.
# 5. Чем отличается команда git stash apply от git stash pop?
#     Команда `git stash apply` применяет стэш к текущему состоянию рабочего каталога и индекса, но не удаляет стэш из списка стэшей. В то время как команда `git stash pop` применяет стэш и сразу же удаляет его из списка стэшей.
# 6. Что делает команда git stash drop?
#     Команда `git stash drop` удаляет указанный стэш из списка стэшей. Если мы не указыважем конкретный стэш, команда удалит верхний стэш.
# 7. Как полностью очистить все сохранённые стэши?
#     Чтобы полностью очистить все сохранённые стэши, можно использовать команду `git stash clear`. Это удалит все стэши из списка стэшей.
# 8. В каких случаях удобно использовать git stash?
#     Команда `git stash` удобна в следующих случаях:
#     - Когда мы хотим временно сохранить изменения в рабочем каталоге и индексе, чтобы переключиться на другую ветку или выполнить другие задачи.
#     - Когда мы хотим применить изменения из другого стэша, но не хотим терять текущие изменения. В этом случае можно использовать `git stash apply` или `git stash pop`.
#     - Когда мы хотим очистить рабочий каталог и индекс, чтобы начать с чистого листа, но не хотим терять текущие изменения. В этом случае можно использовать `git stash save` и затем `git stash drop`.
#     - Когда мы хотим сохранить изменения, которые не готовы к коммиту, но мы хотим продолжить работу над ними позже. В этом случае можно использовать `git stash save` и затем `git stash pop`, когда будем готовы продолжить работу.
# 9. Что произойдёт, если выполнить git stash pop, но в проекте есть конфликтующие изменения?
#     - Если в проекте есть конфликтующие изменения, то `git stash pop` не сможет применить стэш, и мы получим сообщение об ошибке. Нам нужно будет разрешить конфликты вручную, после чего можно будет продолжить работу.
# 10. Можно ли восстановить удалённый стэш после выполнения git stash drop?
#     - Нет, после выполнения `git stash drop` стэш удаляется из истории и не может быть восстановлен.
# 11. Что делает команда git stash save "NAME_STASH"
#     - Команда `git stash save "NAME_STASH"` сохраняет текущие изменения в стэш с указанным именем. Это позволяет сохранить изменения, которые не готовы к коммиту, но мы хотим продолжить работу над ними позже. Имя стэша помогает идентифицировать его в будущем.
# 12. Что делает команда git stash apply "NUMBER_STASH"
#     - Команда `git stash apply "NUMBER_STASH"` применяет изменения из указанного стэша к текущему состоянию рабочего каталога, но не удаляет стэш из списка стэшей. Это позволяет нам применить сохраненные изменения несколько раз, если это необходимо.
# 13. Что делает команда git stash pop "NUMBER_STASH"
#     - Команда `git stash pop "NUMBER_STASH"` применяет изменения из указанного стэша к текущему состоянию рабочего каталога и сразу же удаляет этот стэш из списка стэшей. Это удобно, когда мы хотим применить сохраненные изменения и больше не нуждаемся в этом стэше.
# 14. Сохраните текущие изменения в стэш под названием "SENATOROV ver1", вставьте скриншот из терминала
# ![Screenshot 2025-02-16 144134.png](<attachment:Screenshot 2025-02-16 144134.png>)
# 15. Внесите любые изменения в ваш репозиторий и сохраните второй стэш под именем "SENATOROV ver2"
# ![Screenshot 2025-02-16 144239.png](<attachment:Screenshot 2025-02-16 144239.png>)
# 16. Восстановите ваш стэш "SENATOROV ver1", вставьте скриншот из терминала
# ![Screenshot 2025-02-16 144306.png](<attachment:Screenshot 2025-02-16 144306.png>)
# 17. Удалите все стеши из истории, вставьте скриншот из терминала
# ![Screenshot 2025-02-16 144333.png](<attachment:Screenshot 2025-02-16 144333.png>)
