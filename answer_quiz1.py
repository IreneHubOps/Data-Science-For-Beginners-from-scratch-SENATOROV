"""Answers for quiz1."""

#  Как понять, что домашка пришла?\n",
# надо нажать fetch origin - history - смотрим последний коммит (что произошло)\n"
# 2) Как принять домашку?\n",
# Open VS code - homework(hw), смотрим домашку, делаем ее
# 3) Зачем нужна кнопка history и какие функции появляются при нажатии правой кнопки мыши на коммит?\n",
#    Где брать ссылку на коммит? куда её отправлять?\n",
# 4) Что такое файл лога? \n",
#    это краткое содержание урока, которое нужно отправить после окончания урока\n",
# "\n"
# 4.1 Когда нужно его пушить?\n",
#   после окончания урока\n",
# 5) Что такое интерпретатор? \n",
# интерпретатор - это программа, которая читает и запускает наш код \n",
# 6) Где можно выбрать интерпретатор?\n",
# выбрать наверху VC code интерпретатор
# 7) Что такое модуль? \n",
# любое приложение, которое можно опубликовать, версионировать, импортировать или скачать \n",
# 8) Как создать и отправить коммит?\n",
# Заходим в кошку, выбираем наши файлы, пишем заголовок для отправки коммит, нажимаем Commit to main и Push origin
# 9) Как посмотреть что коммит точно отправлен и находится в github?\n",
# Заходим в history, проверяем, что отправили коммит - View in GitHub, забираем ссылку на коммит и отправляем в \n",
# телеграм Homework, пишем commit отдал и ссылку на коммит\n",
# 10) Какая команда показывает что код не прошёл проверки на ошибки? \n",
#   линтеры — инструменты, контролирующие оформление кода в проекте. Именно они помогают поддерживать его чистоту,\n",
#  предотвращать создание коммитов, которые могут содержать ошибки.   \n",
# 10.1 Напишите список линтеров которые используются для проверки кода и дайте их краткую характеристику.\n",
#   Pylint  - analyses your code without actually running it. It checks for errors, enforces a coding standard, \n",
#   looks for code smells, and can make suggestions about how the code could be refactored.\n",
#   Pydocstyle - is a static analysis tool for checking compliance with Python docstring conventions.\n",
#   Flake8 инструмент, позволяющий просканировать код проекта и обнаружить в нем стилистические ошибки \n",
#    и нарушения различных конвенций кода на Python.\n",
#   Mypy - нахождение багов, которые не подстать обычным линтерам. Позволяет отлавливать ошибки до их появления в runtime, \n",
#   получать более надежный и читабельный код.\n",
# 11) Как узнать какой именно линтере прошёл проверку?\n",
# секция с ячейкой ошибки и наименованием линтера подсвечивается красным \n",
# 12) Линтер Pylint видит markdown?\n",
# нет, если после маркдаун - в vc code будет расхождение \n",
# 13) Номер ячейки в терминале и номер ячейки в vs code может отличаться? в каком случае? \n",
# имя секции - номер ячейки - код ошибки \n",
# 14) Где посмотреть номер ячейки в vscode?\n",
#   Внизу VC code указаны номера ячеек sell\n",
# 15) В каком формате ipynb отправляется в гитхаб? причём здесь JSON?\n",
# в формате JSON\n",
# 16) Где посмотреть в какой ячейке ошибка?\n",
# 17) Как запустить терминал?\n",
# в VC code есть кнопка терминал, на нее нажимаем, терминал запустился\n",
#
