"""Git commit types."""

# 1. Опишите своими словами назначение каждого из этих типов коммитов:\
# feat, fix, docs, style, refactor, test, build, ci, perf, chore.\
#
#     `feat` - добавление новой функциональности.\
#     `fix` - Исправление багов.\
#     `docs` - обновление документации.\
#     `style` - изменения, не влияющие на функциональность (форматирование кода, пробелы, точки с запятой и т.д.).\
#     `refactor` - правки кода без исправления ошибок или добавления новых функций.\
#     `test` - добавление тестов.\
#     `build` - изменения, влияющие на сборку проекта (например, обновление зависимостей).\
#     `ci` - изменения в конфигурации CI/CD.\
#     `perf` - изменения, направленные на улучшение производительности.\
#     `chore` - вспомогательные изменения, не влияющие на код (например, обновление конфигурационных файлов).
#
# 2. Представьте, что вы исправили баг в функции, которая некорректно округляет числа. Сделайте фиктивный коммит и напишите для него сообщение в соответствии с Conventional Commits (используя тип fix).\
# `git commit -m "fix: исправление округления чисел в функции roundNumbers"`
#
# 3. Добавление новой функциональности:\
# Допустим, вы реализовали новую функцию generateReport в проекте. Сделайте фиктивный коммит с типом feat, отражающий добавление этой функциональности\
# `git commit -m "feat: добавление функции generateReport для генерации отчётов"`
#
# 4. Модификация формата кода или стилей:\
# Представьте, что вы поправили отступы и форматирование во всём проекте, не меняя логики кода. Сделайте фиктивный коммит с типом style\
# `git commit -m "style: исправление отступов и форматирования во всём проекте"`
#
# 5. Документация и тестирование:\
#     Сделайте фиктивный коммит с типом docs, добавляющий или улучшающий документацию для вашей новой функции.\
#     `git commit -m "docs: добавление документации для функции generateReport"`\
#     Сделайте фиктивный коммит с типом test, добавляющий тесты для этой же функции.\
#     `git commit -m "test: добавление тестов для функции generateReport"`
#
#
