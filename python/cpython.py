"""Module on CPython and PyPy."""

# * 1. Что такое CPython и чем он отличается от Python?
# Python - язык программирования. CPython -  реализация языка программирования Python, написанная на языке C, а также интерпритатор.
# CPython является интерпретируемым языком, что означает, что код выполняется строка за строкой, без предварительной компиляции в машинный код

# 3. Сколько существует реализаций Python, и какая из них самая популярная? - 6. CPython
# 4. На каком языке написан CPython? - на С

# Поиск и установка CPython

# 5. (опционально) Кто создал CPython?  Guido van Rossum
# 6. Почему Python считается быстрым, несмотря на то, что это интерпретируемый язык?
# написан на языке С и из него вызывает инструкции.
# 7. Напишите путь к Интерпретатору CPython на вашем компьютере
# '/home/tatiana/Documents/Python-3.11.4'

# **Структура CPython**

# * 8.Что содержится в папке include в CPython?
# заголовочные файлы, которые определяют интерфейсы и структуры данных, используемые в реализации интерпретатора Python
# *  9.Где можно найти исходный код CPython дайте ссылку на репозиторий гитхаб
# (https://github.com/python/cpython)
# * 10(опционально) Как работает интерпретатор CPython при выполнении кода? запускает код построчно
#

# **Запуск файла с помощью CPython**

# 11. Какая команда используется для запуска файла с помощью CPython? python имя_файла.py
# 12. Можно ли запускать текстовые файлы через интерпретатор Python? Почему? - Да. Все файлы запускает
# 13. Как указать путь к интерпретатору и файлу для выполнения кода? Зайти в терминал и встаыить путь до интерпритатора и путь до файла

# **Введение в PyPy**

# * 14. Чем PyPy отличается от CPython? -Работпет в 10 раз быстрее СPython/
# * 15.Почему PyPy не может использоваться для всех проектов на Python? - Не совсеми совместим, те молодой
# * 16.Где можно скачать PyPy?  -  https://pypy.org/

# **Установка и запуск PyPy**

# 17. Как установить PyPy после скачивания? - Распаковать архив,файл exe или папка bin
# 18. Как запустить файл с помощью PyPy? - в терминале: путь до pypy путь до файла
# 19. Почему PyPy выполняет код быстрее, чем CPython? -

# # Практические задания

# Задание 1: Поиск и установка CPython

# Проверьте, установлен ли CPython на вашем компьютере:
# Используйте поиск в меню "Пуск" (Windows) или терминале (Linux/Mac).
# Введите команду python --version или python3 --version в терминале.
# Если CPython не установлен, скачайте его с официального сайта Python https://www.python.org/downloads/ и установите.

# Установлена версия Python 3.11.4

# Задание 2: Исследование структуры CPython

# Найдите папку, где установлен Python (например, через команду which python в терминале или свойства ярлыка).
# Откройте папку include и изучите её содержимое. Какое количество файлов на C там есть? - 74
# Перейдите на [GitHub-репозиторий CPython](https://github.com/python/cpython) и найдите файл README. Прочитайте информацию о проекте.

# Задание 5: Сравнение производительности CPython и PyPy

# Создайте файл performance_test.py с кодом:

# ![image.png](attachment:image.png)

# Запустите этот файл сначала через CPython, а затем через PyPy. Запишите результаты времени выполнения для обоих интерпретаторов.
# Сделайте вывод о разнице в производительности.

# ![image.png](attachment:image.png)

# ![image.png](attachment:image.png)

print(abs(0.0768 - 2.92), 2.92 / 0.0768)

# Вывод: PyPY быстрее на 2.8432 секунд или в 38 раз
