"""Ответы на вопросы по виртуальному окружению."""

# ## Список вопросов и ответов по теме виртуальное окружение:
#
# 1. Что делает команда python -m venv venv?
#
# Команда для создания виртуального окружения внутри проекта.
#
# 1.1 Что делает каждая команда в списке ниже?
#
#  - ```pip list``` - выводит список всех установленных пакетов в вашей текущей среде Python вместе с их версиями.
#  - ```pip freeze > requirements.txt``` - используется для создания файла requirements.txt, содержащего список всех установленных пакетов в текущей среде Python и их версий.
#  - ```pip install -r requirements.txt``` - используется для установки всех пакетов, которые прописаны в файле requirements.txt
#
# 2. Что делает каждая команда в списке ниже?
#
#  - ```conda env list``` - используется для отображения списка всех сред (environments), созданных с помощью conda.
#  - ```conda create -n env_name python=3.5``` - используется для создания новой среды с указанной версией Python (в данном случае Python 3.5) с помощью менеджера пакетов conda.
#  - ```conda env update -n env_name -f file.yml``` - используется для обновления существующей среды (environment) с именем env_name с помощью файла спецификации file.yml. Файлы спецификации с расширением yml содержат информацию о зависимостях и конфигурации, которые используются для настройки среды или других процессов.
#  - ```source activate env_name``` - используется для активации указанной среды в командной оболочке. Однако начиная с версии conda 4.4, рекомендуется использовать команду conda activate env_name.
#  - ```source deactivate``` - для деактивации виртуального окружения. С версии conda 4.4, рекомендуется использовать команду conda deactivate.
#  - ```conda clean -a``` - используется для очистки различных кешей и временных файлов, которые создаются и используются conda. Выполнение этой команды помогает освободить место на диске и поддерживать вашу систему в чистоте.
#
# 3. Вставьте скрин вашего терминала, где вы активировали сначала venv, потом conda, назовите окружение "SENATOROV"
#
# ![Снимок экрана 2025-02-14 151851.png](https://i.postimg.cc/gjjjQVRR/2025-02-14-151851.png)
#
# ![Снимок экрана 2025-02-14 161727.png](https://i.postimg.cc/YS2vQB9b/2025-02-14-161727.png)
#
# 4. Как установить необходимые пакеты внутрь виртуального окружения для conda/venv?
#
# После активации нашего окружения установить пакеты в conda можно командой conda install "package_name", в venv - pip install "package_name".
#
# 5. Что делают эти команды?
# ```pip freeze > requirements.txt``` - используется для создания файла requirements.txt, содержащего список всех установленных пакетов в текущей среде Python и их версий.
# ```conda env export > environment.yml``` - используется для экспорта текущего состояния среды conda в файл спецификации environment.yml.
#
# 5.1 Вставьте скрин, где будет видна папка VENV в вашем репозитории а также файлы зависимостей requirements.txt и environment.yml, файлы должны содержать зависимости
#
# ![Снимок экрана 2025-02-14 165655.png](https://i.postimg.cc/3NGN3KSJ/2025-02-14-165655.png)
#
# ![Снимок экрана 2025-02-14 165729.png](https://i.postimg.cc/Cx71hrND/2025-02-14-165729.png)
#
# ![Снимок экрана 2025-02-14 165743.png](https://i.postimg.cc/P5XXRzjq/2025-02-14-165743.png)
#
# 6. Что делают эти команды?
# ```pip install -r requirements.txt``` - устанавливает зависимости, прописанные в файле requirements.txt.
# ```conda env create -f environment.yml``` - устанавливает зависимости, прописанные в файле environment.yml.
#
# 7. Что делают эти команды?
# ```pip list``` - показывает в терминале список установленных зависимостей для интерпретатора Python с их названиями и версиями.
# ```pip show``` - используется для отображения информации о конкретном установленном пакете в вашей текущей среде Python.
# ```conda list``` - выводит в терминале список установленных зависимостей для интерпретатора anaconda с их названиями и версиями.
#
# 8. Где по умолчанию больше пакетов venv/pip или conda? и почему дата сайнинисты используют conda?
#
# По умолчанию больше пакетов в venv/pip, чем в conda (350 тысяч против 7,5). В data science используется conda, так как этот пакетный менеджер специально предназначен для работы с большими данными, обеспечивает более эффективное управление зависимостями, поддерживает пакеты и зависимости, которые не являются Python-библиотеками.
#
# 9. Вставьте скрин где будет видно, Выбор интерпретатора Python (conda) в VS Code/cursor
#
# ![Снимок экрана 2025-02-14 170917.png](https://i.postimg.cc/pdy22Wyb/2025-02-14-170917.png)
#
# 10. Добавьте в .gitignore папку SENATOROV
#
# ![Снимок экрана 2025-02-14 171249.png](https://i.postimg.cc/25JCysBq/2025-02-14-171249.png)
#
# 11. Зачем нужно виртуально окружение?
#
# Под разные проекты бывают нужны разные пакеты или разные версии одного и того же пакета. Чтобы не было конфликтов и не засорялся основной интерпретатор, для проекта создается свое виртуальное окружения и туда устанавливаются только те зависимости, которые будут в нем использоваться.
#
# 12. С этого момента надо работать в виртуальном окружении conda, ты научился(-ась) выгружать зависимости и работать с окружением?
#
# YES
#
# 13. Удалите папку VENV, она больше не нужна, мы же не разрабы, нам нужна только conda
#
# OK
#
#

#
